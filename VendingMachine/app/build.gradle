/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the jacoco plugin to support generating test report
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependencies is used by the application.
    // We use JSON as part of our database.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

application {
    // Define the main class for the application.
    mainClass = 'vendingmachine.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task wrapper(type: Wrapper) {
    // Automatic installation of "gradle 7.5.1" if not found
    // The Gradle Version that our App uses is "7.5.1".
    gradleVersion = '7.5.1'
}

run {
    // The standart input of our App is System.in (i.e. user terminal)
    standardInput = System.in
}

// Create Java Archive (app/build/libs/app.jar) Artifact
// Run app.jar using `java -jar app.jar` for acceptance testing.
jar {
    manifest {
        attributes (
            "Main-Class": 'vendingmachine.App'
        )
    }
}
